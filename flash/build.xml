<project name="AcidSWF" basedir="." default="test">
	<!-- setup a prefix for all environment variables -->
	<property environment="env" />
	
    <loadproperties srcFile="../build.properties"/>
    
    <!-- Setup paths for build -->
    <property name="main.src.loc" location="${basedir}/src" />
    <property name="test.src.loc" location="${basedir}/tests" />
    <property name="lib.loc" location="${basedir}/lib" />
    <property name="bin.loc" location="${basedir}/bin" />
    <property name="output.loc" location="${bin.loc}" />
    <property name="report.loc" location="${output.loc}/report" />
    <property name="flashplayer" location="/home/thijs/opt/Adobe Flash Player/flashplayerdebugger" />

    <!-- You can set this location directly for mxmlc to work correctly,
     eg. /Applications/Adobe Flex Builder 3 Plug-in/sdks/4.1.0,
     or set FLEX_HOME as an environment variable and use as below,
     eg. ${env.FLEX_HOME} -->
    <property name="FLEX_HOME" location="${env.FLEX_HOME}" />
    
    <xmlproperty file="${FLEX_HOME}/flex-sdk-description.xml" keepRoot="false"
                 prefix="flex"/>
    
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
    <taskdef resource="flexUnitTasks.tasks">
       <classpath>
           <fileset dir="${lib.loc}">
               <include name="flexUnitTasks*.jar" />
           </fileset>
       </classpath>
    </taskdef>

	<target name="clean">
		<!-- Remove all directories created during the build process -->
		<delete dir="${output.loc}" />
	</target>

	<target name="flash-environment">
		<echo>${ant.version}</echo>
		<echo>Java ${ant.java.version}</echo>
		<echo>Flex ${flex.version}.${flex.build}</echo>
	</target>
		
	<target name="test" depends="flash-environment, clean">
		<!-- Create directories needed for the build process -->
		<mkdir dir="${output.loc}" />
		<mkdir dir="${bin.loc}" />
		<mkdir dir="${report.loc}" />
        
		<!-- AMF -->
		<test transport="${amf.transport}" host="${amf.host}"
			  port="${amf.port}" service="${amf.service}"
			  url="${amf.url}" encoding="0"/>
		
		<test transport="${amf.transport}" host="${amf.host}"
			  port="${amf.port}" service="${amf.service}"
			  url="${amf.url}" encoding="3"/>
		
		<!-- RTMP -->
		<test transport="${rtmp.protocol}" host="${rtmp.host}"
			  port="${rtmp.port}" service="echo"
			  url="${rtmp.url}" encoding="0"/>
		
		<test transport="${rtmp.protocol}" host="${rtmp.host}"
			  port="${rtmp.port}" service="echo"
			  url="${rtmp.url}" encoding="3"/>

        <copy file="assets/index.html"
	          todir="${report.loc}/html" overwrite="true"
	          verbose="true"/>

	</target>

    <macrodef name="test">
	    <attribute name="host"/>
    	<attribute name="transport"/>
    	<attribute name="port"/>
    	<attribute name="service"/>
    	<attribute name="url"/>
    	<attribute name="encoding"/>
	    <sequential>
            <echo message=""/>
	    	<echo message="Starting tests for AMF@{encoding} on @{url}"/>
	    	<echo message=""/>

	    	<copy file="assets/Config.as"
	              todir="${main.src.loc}/com/collab/acidswf" overwrite="true"
	              verbose="true"/>
			<replace 
			    file="${main.src.loc}/com/collab/acidswf/Config.as">
			  <replacefilter 
			    token="@projectName@" value="${ant.project.name}"/>
	          <replacefilter 
			    token="@projectVersion@" value="${version}"/>
			  <replacefilter 
			    token="@host@" value="@{transport}://@{host}"/>
	          <replacefilter 
			    token="@port@" value="@{port}"/>
			  <replacefilter 
				token="@url@" value="@{url}"/>
			  <replacefilter 
			    token="@service@" value="@{service}"/>
			  <replacefilter 
				token="@objectEncoding@" value="@{encoding}"/>
			</replace>
	    	
	    	<!-- Compile TestRunner.mxml as a SWF -->
			<mxmlc file="${test.src.loc}/TestRunner.mxml" output="${bin.loc}/TestRunner.swf"
				   debug="true">
				<source-path path-element="${main.src.loc}" />
				<library-path dir="${lib.loc}" append="true">
					<include name="*.swc" />
				</library-path>
				<compiler.verbose-stacktraces>true</compiler.verbose-stacktraces>
				<compiler.headless-server>true</compiler.headless-server>
				<define name="CONFIG::objectEncoding" value="@{encoding}"/>
			</mxmlc>
			
			<!-- Execute TestRunner.swf as FlexUnit tests and publish reports -->
			<flexunit swf="${bin.loc}/TestRunner.swf" 
			          workingDir="${bin.loc}"
			          toDir="${report.loc}" 
				      haltonfailure="false"
                      command="${flashplayer}"
				      verbose="false" 
				      localTrusted="true"/>
			<!--
		      <source dir="${main.src.loc}" />
		      <testSource dir="${test.src.loc}">
		         <include name="**/*Test.as" />
		      </testSource>
		      <library dir="${lib.loc}" />
		   </flexunit> -->

			<!-- Generate readable JUnit-style reports -->
	    	<mkdir dir="${report.loc}" />

   			<junitreport todir="${report.loc}">
				<fileset dir="${report.loc}">
					<include name="TEST-*.xml" />
				</fileset>
				<report format="noframes" todir="${report.loc}/html">
					<param name="TITLE" expression="Test results for AMF@{encoding} on @{url}"/>
				</report>
			</junitreport>
            
	    	<move file="${report.loc}/html/junit-noframes.html"
                  tofile="${report.loc}/html/@{transport}-amf@{encoding}.html"/>
            
            <delete>
                <fileset dir="${report.loc}" includes="**/TEST-*.xml"/>
            </delete>

            <echo message=""/>
	    	<echo message="Completed tests for AMF@{encoding} on @{url}"/>
	    	<echo message=""/>

	    </sequential>
    </macrodef>
	
</project>
