<project name="acidswf-flash" basedir="." default="test">
	<!-- setup a prefix for all environment variables -->
	<property environment="env" />
	
	<!-- Setup paths for build -->
	<property name="main.src.loc" location="${basedir}/src" />
	<property name="test.src.loc" location="${basedir}/tests" />
	<property name="lib.loc" location="${basedir}/libs" />
	<property name="bin.loc" location="${basedir}/bin" />
    <property name="output.loc" location="${bin.loc}" />
	<property name="report.loc" location="${output.loc}/report" />
	<property name="dist.loc" location="${output.loc}/dist" />

	<!-- You can set this directly so mxmlc will work correctly, or set FLEX_HOME as an environment variable and use as below -->
	<property name="FLEX_HOME" location="${env.FLEX_HOME}" />
    
    <xmlproperty file="${FLEX_HOME}/flex-sdk-description.xml" keepRoot="false"
                 prefix="flex"/>
    
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
	<taskdef resource="flexUnitTasks.tasks">
	   <classpath>
	      <fileset dir="${lib.loc}">
	         <include name="flexUnitTasks*.jar" />
	      </fileset>
	   </classpath>
	</taskdef>

	<target name="clean">
		<!-- Remove all directories created during the build process -->
		<delete dir="${output.loc}" />
	</target>

	<target name="init">
        <echo>Flex ${flex.version}.${flex.build}</echo>
		<!-- Create directories needed for the build process -->
		<mkdir dir="${output.loc}" />
		<mkdir dir="${bin.loc}" />
		<mkdir dir="${report.loc}" />
		<mkdir dir="${dist.loc}" />
	</target>

	<target name="test" depends="init">
		<!-- Execute FlexUnit tests and publish reports -->
		<flexunit 
		    workingDir="${bin.loc}"
		    toDir="${report.loc}" 
			haltonfailure="false" 
			verbose="true" 
			localTrusted="true">
	      <source dir="${main.src.loc}" />
	      <testSource dir="${test.src.loc}">
	         <include name="**/*Test.as" />
	      </testSource>
	      <library dir="${lib.loc}" />
	   </flexunit>

		<!-- Generate readable JUnit-style reports -->
		<junitreport todir="${report.loc}">
			<fileset dir="${report.loc}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${report.loc}/html" />
		</junitreport>
	</target>
	
	<target name="package" depends="test">
		<!-- Zip up final website -->
		<zip destfile="${output.loc}/${ant.project.name}.zip">
			<fileset dir="${dist.loc}" />
		</zip>
	</target>
</project>