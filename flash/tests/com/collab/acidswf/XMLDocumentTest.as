// Copyright (c) The AcidSWF Project.// See LICENSE.txt for details.
package com.collab.acidswf
{
	import flash.events.Event;	import flash.xml.XMLDocument;		import org.hamcrest.assertThat;	import org.hamcrest.collection.arrayWithSize;	import org.hamcrest.object.equalTo;	import org.hamcrest.object.instanceOf;
		/**	 * Tests for the XMLDocument type.	 * 	 * Note: XMLDocument is the AS3 equivalent of the XML type in AS2,	 *       so this is deprecated from a Flash Player point of view.	 * 	 * @language 3.0	 * @playerversion Flash 9.0	 * @since 1.0 	 */	public class XMLDocumentTest extends BaseTest
	{		private static var tree:XMLDocument = new XMLDocument(<employees>						<employee ssn='123-123-1234'>							<name first='John' last='Doe'/>							<address>								<street>11 Main St.</street>								<city>San Francisco</city>								<state>CA</state>								<zip>98765</zip>							</address>						</employee>						<employee ssn='789-789-7890'>							<name first='Mary' last='Roe'/>							<address>								<street>99 Broad St.</street>								<city>Newton</city>								<state>MA</state>								<zip>01234</zip>							</address>						</employee>					</employees>);				[Before]		public function setUp():void		{			setup();		}				[After]		public function tearDown():void		{			teardown();		}				[Test(async)]		public function create():void		{			var tmp:XMLDocument = new XMLDocument();						setupCall( function(event:Event, passThroughData:*):void			{				assertThat( loader.result, instanceOf( XMLDocument ));			},			tmp );		}				[Test(async)]		public function simple():void		{			setupCall( function(event:Event, passThroughData:*):void			{				// returns XML for XMLDocument in as3				assertThat( loader.result, instanceOf( XML ));			},			tree );		}				[Test(async)]		public function array():void		{			var tmp:Array = new Array();			tmp.push( tree );			tmp.push( tree );						setupCall( function(event:Event, passThroughData:*):void			{				assertThat( loader.result, instanceOf( Array ));				assertThat( loader.result, arrayWithSize( 2 ));			},			tmp );		}	}
}
